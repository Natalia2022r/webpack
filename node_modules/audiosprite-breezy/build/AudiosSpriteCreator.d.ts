/// <reference types="node" />
import type { Options, DefaultOutput, Export, HowlerOutput, Howler2Output, CreateJSOutput, AudioFormat, AudioFormatOptions } from './consts';
import { ChildProcessWithoutNullStreams } from 'child_process';
declare class AudiosSpriteCreator {
    files: Array<string>;
    options: Options;
    offsetCursor: number;
    json: DefaultOutput;
    rootTemp: string;
    formats: Partial<Export>;
    constructor(paths: Array<string>, options: Partial<Options>);
    get wavArgs(): (string)[];
    checkFiles(): Promise<void>;
    createOutputDir(): Promise<void>;
    spawn(name: string, options: Array<string>): ChildProcessWithoutNullStreams;
    checkFFMpeg(): Promise<void>;
    makeTemp(prefix?: string): string;
    appendSilence(duration?: number, tempFile?: string): Promise<void>;
    prepare(): Promise<void>;
    makeRawAudioFile(src: string): Promise<string>;
    appendFile(file: string, src: string): Promise<string>;
    exportFileCaf(src: string, dest: string): Promise<void>;
    exportFile(src: string, dest: string, ext: AudioFormat, opt: AudioFormatOptions, store: boolean): Promise<void>;
    exportRawFiles(temp: string, index: number): Promise<void>;
    processFile(file: string, index: number): Promise<void>;
    processFiles(): Promise<void>;
    exportFiles(): Promise<void>;
    exportJson(): Promise<DefaultOutput | HowlerOutput | Howler2Output | CreateJSOutput>;
}
export default AudiosSpriteCreator;
